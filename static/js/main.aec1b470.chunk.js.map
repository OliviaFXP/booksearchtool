{"version":3,"sources":["main/header.js","main/book-search-filter.js","book-search-results/row.js","book-search-results/index.js","main/footer.js","main/index.js","reportWebVitals.js","index.js"],"names":["Header","props","className","subtitle","BookSearchFilter","state","titleSearchTerm","onSearchChagne","e","preventDefault","searchBooksByTitle","onTextChange","setState","target","value","this","id","htmlFor","type","onChange","onClick","Component","Row","data-label","src","book","book_cover_url","alt","title","author","published_date","sortTypes","title_up","class","sort_column","sort_order","fn","a","b","localeCompare","title_down","most_recent_publish_year_up","most_recent_publish_year_down","default","BookSearchResults","currentSort","test","determineNextSort","column","next_sort","console","log","onSortChange","searchResultRows","results","sort","map","key","bookSearchTerm","scope","bind","style","backgroundColor","width","height","Footer","App","getQueryString","bookTitle","trim","replace","buildBookSearchResults","allBooksResp","i","docs","length","push","isbn","author_name","join","publish_date","most_recent_publish_year","publish_year","qs","fetch","then","res","json","searchResults","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aec1b470.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = (props) => (\r\n    <header className=\"header\">\r\n        <div className=\"wrapper\"> \r\n            <span className=\"header-title\"> {props.subtitle}</span>\r\n        </div>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass BookSearchFilter extends Component {\r\n    state = {titleSearchTerm:\"\"}\r\n\r\n    onSearchChagne = (e) => {\r\n        e.preventDefault();        \r\n        this.props.searchBooksByTitle(this.state.titleSearchTerm);\r\n    }\r\n\r\n    onTextChange = (e) => {\r\n        e.preventDefault();        \r\n        this.setState({titleSearchTerm:e.target.value});\r\n    }\r\n\r\n    render() {\r\n        \r\n        const titleSearchTerm = this.state.titleSearchTerm;\r\n        return (         \r\n            <div id=\"search-bar\">\r\n                <label htmlFor=\"query\">Search</label> \r\n                <input id=\"query\" type=\"search\" value={titleSearchTerm} onChange={this.onTextChange}/>\r\n                <button onClick={this.onSearchChagne}>Search</button>\r\n            </div>                \r\n        );\r\n    }\r\n}\r\n\r\nexport default BookSearchFilter;","import React from 'react';\r\n\r\nconst Row = (props) => {\r\n    return (\r\n        <tr>\r\n            <td data-label=\"Book cover\"><img src={props.book.book_cover_url} alt=\"book cover\"/></td>\r\n            <td data-label=\"Title\">{props.book.title}</td>\r\n            <td data-label=\"Author\">{props.book.author}</td>\r\n            <td data-label=\"Published Date\">{props.book.published_date}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default Row;","import React, { Component } from 'react';\r\nimport SearchResultRow from './row'\r\n\r\nconst sortTypes = {\r\n    title_up: {\r\n        class: 'sort-up',\r\n        sort_column: 'title',\r\n        sort_order: 'up',\r\n        fn: (a, b) => a.localeCompare(b)\r\n    },\r\n    title_down: {\r\n        class: 'sort-down',\r\n        sort_column: 'title',\r\n        sort_order: 'down',\r\n        fn: (a, b) => b.localeCompare(a)\r\n    },\r\n    most_recent_publish_year_up: {\r\n        class: 'sort-up',\r\n        sort_column: 'most_recent_publish_year',\r\n        sort_order: 'up',\r\n        fn: (a, b) => a - b\r\n    },\r\n    most_recent_publish_year_down: {\r\n        class: 'sort-down',\r\n        sort_column: 'most_recent_publish_year',\r\n        sort_order: 'down',\r\n        fn: (a, b) => b - a\r\n    },\r\n    default: {\r\n        class: 'sort',\r\n        sort_column: 'title',\r\n        sort_order: 'up',\r\n        fn: (a, b) => a.localeCompare(b)\r\n    }\r\n};\r\n\r\nclass BookSearchResults extends Component {\r\n    state = {\r\n        currentSort: sortTypes.default\r\n    };\r\n\r\n    test = null;\r\n\r\n    determineNextSort = (currentSort, column) => {\r\n        let next_sort;\r\n        if (currentSort.sort_column === column) {\r\n            if (currentSort === sortTypes.default) {\r\n                next_sort = sortTypes[column + '_up']\r\n            } else {\r\n                if (currentSort.sort_column === 'title' && currentSort.sort_order === 'up') {\r\n                    next_sort = sortTypes.title_down;\r\n                } else if (currentSort.sort_column === 'title' && currentSort.sort_order === 'down') {\r\n                    next_sort = sortTypes.title_up;\r\n                } else if (currentSort.sort_column === 'most_recent_publish_year'\r\n                    && currentSort.sort_order === 'up') {\r\n                    next_sort = sortTypes.most_recent_publish_year_down;\r\n                } else if (currentSort.sort_column === 'most_recent_publish_year'\r\n                    && currentSort.sort_order === 'down') {\r\n                    next_sort = sortTypes.most_recent_publish_year_up;\r\n                } else {\r\n                    next_sort = sortTypes[column + '_up'];\r\n                }\r\n            }\r\n        } else {\r\n            next_sort = sortTypes[column + '_up'];\r\n        }\r\n        console.log(next_sort);\r\n        return next_sort;\r\n    }\r\n\r\n    onSortChange = (column, e) => {\r\n        this.setState({\r\n            currentSort: this.determineNextSort(this.state.currentSort, column)\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        let searchResultRows;\r\n        let results = this.props.results;\r\n        let currentSort = this.state.currentSort;\r\n        if (results) {\r\n            let sortedResult = results.sort((a, b) => {\r\n                return currentSort.fn(a[currentSort.sort_column], b[currentSort.sort_column]);\r\n            })\r\n            searchResultRows = sortedResult.map(b =>\r\n                <SearchResultRow key={b.key} book={b} />\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <table className=\"responsive-table\">\r\n                  <caption>List of books search with {this.props.bookSearchTerm}</caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Book Cover</th>\r\n                            <th scope=\"col\">\r\n                                Title\r\n                                <button onClick={this.onSortChange.bind(this, 'title')}>\r\n                                    {currentSort.sort_column === 'title' ? <i className={`fas fa-${currentSort.class}`} /> : <i className={`fas fa-sort`} />}\r\n                                </button>\r\n                            </th>\r\n                            <th scope=\"col\">Author</th>\r\n                            <th scope=\"col\">\r\n                                Published Date\r\n                                <button style={{backgroundColor: \"lightblue\", width:\"100px\", height:\"50px\"}} \r\n                                onClick={this.onSortChange.bind(this, 'most_recent_publish_year')}>\r\n                                    {currentSort.sort_column === 'most_recent_publish_year' ? <i className={`fas fa-${currentSort.class}`} /> : <i className={`fas fa-sort`} />}\r\n                                </button>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {searchResultRows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n    // return (\r\n    //     <div className=\"wrapper\">\r\n    //         <table className=\"responsive-table\">\r\n    //             <caption>List of books search with {props.bookSearchTerm}</caption>\r\n    //             <thead>\r\n    //                 <tr>\r\n    //                 <th scope=\"col\">Book Cover</th>\r\n    //                 <th scope=\"col\">Title</th>\r\n    //                 <th scope=\"col\">Author</th>\r\n    //                 <th scope=\"col\">Publish Date</th>\r\n    //                 </tr>\r\n    //             </thead>\r\n    //             <tbody>\r\n    //                 {searchResultRows}\r\n    //             </tbody>\r\n    //         </table>\r\n    //     </div>\r\n    // );\r\n\r\nexport default BookSearchResults;","import React from 'react';\r\n\r\nconst Footer = ( ) => (\r\n    <footer className=\"footer\">\r\n       <p>Copyright 2021, All rights reserved.</p>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\nimport './main.css';\nimport Header from \"./header\";\nimport BookSearchFilter from \"./book-search-filter\";\nimport BookSearchResults from \"../book-search-results\";\nimport Footer from \"./footer\";\n\nclass App extends Component {\n\n  state = {}\n\n  componentDidMount() {\n    this.setState({ searchResults: [] });\n  }\n\n  getQueryString = (bookTitle) => {\n    return bookTitle.trim().replace(/\\s+/g, '+');\n  }\n\n  buildBookSearchResults = (allBooksResp) => {\n    let results = [];\n    for (var i = 0; i < allBooksResp.docs.length; i++) {      \n      console.log(allBooksResp.docs?.[i].key);\n      results.push({\n        key: allBooksResp.docs?.[i].key,\n        title: allBooksResp.docs?.[i].title,\n        book_cover_url: \"http://covers.openlibrary.org/b/isbn/\" + allBooksResp.docs?.[i].isbn?.[0] + \"-S.jpg\",\n        author: allBooksResp.docs?.[i].author_name?.join?.(\",\"),\n        published_date: allBooksResp.docs?.[i].publish_date?.join?.(\",\"),\n        most_recent_publish_year: allBooksResp.docs?.[i].publish_year?.sort?.((a, b) => b - a)[0]\n      })\n    }\n    return results\n  }\n\n  searchBooksByTitle = (bookTitle) => {\n    this.setState({ bookSearchTerm: bookTitle });\n    let qs = this.getQueryString(bookTitle);\n    fetch(\"http://openlibrary.org/search.json?q=\" + qs)\n      .then(res => res.json())\n      .then(allBooksResp => {\n        this.setState({ searchResults: this.buildBookSearchResults(allBooksResp) });\n      })\n      .catch(() => { });\n  }\n  \n\n  render() {\n    return (\n      <div>\n        <Header subtitle=\"Book Search Tool\" />\n          <div id=\"wrapper\">\n            <div className=\"main\">\n            <BookSearchFilter searchBooksByTitle ={this.searchBooksByTitle} />\n            <BookSearchResults bookSearchTerm={this.state.bookSearchTerm}\n              results={this.state.searchResults} />\n            </div>\n          </div>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}